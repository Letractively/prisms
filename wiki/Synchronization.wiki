#summary An overview of the PRISMS data synchronization system
#labels Featured

= Synchronization of java objects over a data connection =

Included in the PRISMS project is a set of synchronization utilities.  The PRISMS synchronization system is designed to be able to synchronize any type of data between two or more java virtual machines using serial data.  The synchronization can be accomplished over a network link or by file transfers.  Synchronization is meant to be as efficient as possible, transferring only incremental changes with each synchronization action, sending as few complete serialized objects as possible.

A significant implementation effort is required by someone who knows the data set to be synchronized well.  Each independent type of the data set must be given an identifier that is a java long value with 2 parts.  The high 32 bits of the ID represent the integer ID of the data center where the item was created.  The lower 32 bits are unique to the item within that data center.  Utilities are included to help manage these IDs.  The prisms.records2.RecordPersister2 and prisms.records2.Synchronize2Impl interfaces must be implemented correctly for the data set (this is done most conveniently by implementing these interfaces within the same class).  A small amount of additional configuration is required.

Once this implementation is done, a large number (>1000) of data centers at any location can keep a single, consistent set of data that is shared between all centers using only a serial data connection that may or may not be consistent.

A simple synchronization is implemented for synchronizing PRISMS users.  Contact a project owner for more details on implementing synchronization.